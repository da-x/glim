# Location: ~/.config/glim/config.toml
#
# Or on MacOSX: ~/Library/Application\ Support/glim/config.toml

api_key = "<SECRET-KEY>"
hostname = "your-gitlab-server.com"
project = "dev/project"

# === OPTIONAL ===
#
# A Gitlab web session cookie is needed for continual fetching of job logs, as
# the API (13) does not currently allow partial fetching of the job logs (byte
# ranges).
#
# cookie = "a891bc7f17baf88164baf61010128a81"
#
# How to obtain this? In your browser, you need to click left to the URL and
# and get out the value of `_gitlab_session` cookie.
#
# Once in awhile this cookie needs to be updated.
#
#
# ## Job log support ###
#
# You need to point the open_job_command hook to execute the provided
# open-job.sh script under `helpers` with the `tmux-split` command.
#
#     [hooks]
#     open_job_command = "~/.config/glim/open-job.sh tmux-split"
#
#
# ## Matching local repo to remote ref
#
# Suppose there's non trivial matching from local branch to remote ref, and
# there's a customer command to resolve that mapping, you can add it to to
# `remote_ref_command`. For example, here's a hook to execute `git prop -n`
# with a fallback to remote tracking branch resolution:
#
#     [hooks]:
#     remote_ref_command = "v=$(git prop -n | grep ^remote-ref: | awk -F' ' '{print $2}'); if [[ ! -z \"${v}\" ]] ; then echo $v ; else git rev-parse --abbrev-ref --symbolic-full-name @{u}; fi"

